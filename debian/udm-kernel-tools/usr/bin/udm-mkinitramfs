#!/bin/bash
# Bash script for building an initial ram disk for custom kernels.
#
# Copyright (C) 2021 Fabian Mastenbroek.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

set -e

## Command line interface
usage()
{
	cat << EOF

Usage: $0 -o outfile [version]

Options:
  -o outfile	Write to outfile.

See udm-mkinitramfs(8) for further details.

EOF
}

OUT_FILE=

[ $# -eq 0 ] && usage && exit 1
while getopts ":ho:" arg; do
    case $arg in
    o)
        OUT_FILE=$OPTARG
        ;;
    h | *) # Display help.
        usage
        exit 0
        ;;
    esac
done
shift $((OPTIND - 1))

if [ ${#} -ne 1 ]; then
	KERNEL_VERSION="$(uname -r)"
else
	KERNEL_VERSION="$1"
fi

if [ -z "$OUT_FILE" ]; then
   OUT_FILE=/boot/initramfs-"$KERNEL_VERSION".gz
fi

BUILD_DIR=$(mktemp -d -t initramfs-XXXX)
BUSYBOX_PATH=/bin/busybox
KMOD_PATH=/bin/kmod
TOOLS_PATH=/usr/lib/udm-kernel-tools

mkdir -p "$BUILD_DIR"/initramfs
cd "$BUILD_DIR"/initramfs
mkdir -p bin sbin etc proc sys usr/bin usr/sbin overlay root
touch etc/mdev.conf

# Copy over kernel modules
mkdir -p lib/modules
if [ -d /lib/modules/"$KERNEL_VERSION" ]; then
    cp -r /lib/modules/"$KERNEL_VERSION" lib/modules
else
    echo "No modules found for kernel $KERNEL_VERSION"
fi

cp $KMOD_PATH bin/kmod
cp $BUSYBOX_PATH bin/busybox
ln -s busybox bin/sh
cp $TOOLS_PATH/udm-init init
chmod +x init

# Build the compressed initramfs
find . | cpio -H newc -o > ../initramfs.cpio
cd ..
gzip -c initramfs.cpio > "$OUT_FILE"